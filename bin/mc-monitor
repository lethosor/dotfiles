#!/usr/bin/env python3

import argparse
import sys
import threading
import time

import gi
gi.require_version('Notify', '0.7')
from gi.repository import GLib, Notify

from mcstatus import MinecraftServer

def get_players(server):
    players = server.status().players.sample or []
    return set(str(p.name) for p in players)

def update_notification(players, notification):
    if players:
        body = '%i online: %s' % (len(players), ', '.join(players))
    else:
        body = 'No players online'
    notification.update(notification.props.summary, body, notification.props.icon_name)
    notification.show()

def main(args):
    parser = argparse.ArgumentParser()
    parser.add_argument('server')
    args = parser.parse_args(args)

    server = MinecraftServer(args.server)
    server.ping()

    Notify.init(sys.argv[0])
    notification = Notify.Notification.new('Minecraft status: %s' % args.server, '', 'minecraft-launcher')
    loop = GLib.MainLoop()  # todo: use to handle notification closure: https://stackoverflow.com/a/32839454
    prev_players = None

    try:
        while True:
            players = get_players(server)
            if players != prev_players:
                update_notification(players, notification)
                prev_players = players
            time.sleep(60)
    except (KeyboardInterrupt, SystemExit):
        pass
    finally:
        notification.close()

if __name__ == '__main__':
    main(sys.argv[1:])
